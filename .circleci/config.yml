version: 2
jobs:
  build:
    working_directory: ~/work
    docker:
      - image: circleci/android:api-26-alpha
    environment:
      JVM_OPTS: -Xmx1600m
    steps:
      - checkout
      - run: cp .circleci/gradle.properties ~/work/gradle.properties
      - run: ls -alt ~/work/
      - run: echo $ANDROID_HOME
      - run: echo $ANDROID_SDK

      # # - restore_cache:
      # #     key: android-ndk-r17
      # - run: >-
      #     if [[ ! -e android-ndk-r17 ]];
      #         then wget https://dl.google.com/android/repository/android-ndk-r17-linux-x86_64.zip &&
      #         unzip android-ndk-r17-linux-x86_64.zip;
      #     fi
      # - run: echo 'export ANDROID_NDK=${PWD}/android-ndk-r17' >> $BASH_ENV
      # - run: echo 'export ANDROID_NDK_HOME=${ANDROID_NDK}' >> $BASH_ENV
      # # - save_cache:
      # #     paths:
      # #       - android-ndk-r17
      # #     key: android-ndk-r17

      # # - restore_cache:
      # #     key: "jars-{{ checksum \"build.gradle\" }}-{{ checksum  \"samples/build.gradle\" }}-\
      # #           {{ checksum  \"webrtc-video-effector/build.gradle\" }}-r17"
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      # - save_cache:
      #     paths:
      #       - ~/.gradle
      #     key: "jars-{{ checksum \"build.gradle\" }}-{{ checksum  \"samples/build.gradle\" }}-\
      #           {{ checksum  \"webrtc-video-effector/build.gradle\" }}-r17"

      - run:
          name: Run lint
          command: ./gradlew lint
      - run:
          name: Build release
          command: ./gradlew assembleRelease
      - run:
          name: Build debug
          command: ./gradlew assembleDebug

      - store_artifacts:
          path: samples/build/outputs
          destination: outputs
      - store_artifacts:
          path: samples/build/reports
          destination: samples-reports
      - store_artifacts:
          path: webrtc-video-effector/build/reports
          destination: effector-reports
